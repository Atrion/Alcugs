
#init
AC_INIT([alcugs],[1.3.3])
AC_CONFIG_SRCDIR(README)
AM_INIT_AUTOMAKE
AC_CONFIG_HEADERS([config.h])

AH_TOP([#ifndef __U_CONFIG_H
#define __U_CONFIG_H])
AH_BOTTOM([
#endif])

CXXFLAGS="-Wall -rdynamic -g3 -O0"

#Platform info
AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(_PLATFORM_, "${host}",
[Define this to be the canonical name (cpu-vendor-os) of your sytem.])
AC_DEFINE_UNQUOTED(_CPU_,"${host_cpu}",
[Define this to be the name of the CPU of your system.])
AC_DEFINE_UNQUOTED(_VENDOR_,"${host_vendor}",
[Define this to be the name of the vendor of your system.])
AC_DEFINE_UNQUOTED(_OS_, "${host_os}",
[Define this to be the name of the OS of your system.])

#progs
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL

AC_LANG(C++)

#headers
AC_HEADER_STDC
AC_CHECK_HEADERS([unistd.h])

#Zlib
AC_CHECK_HEADERS([zlib.h], , AC_MSG_FAILURE([zlib.h not found!]))
AC_CHECK_LIB(z,compress, , AC_MSG_FAILURE([zlib not found!]))

#check for google/coredumper.h
#AC_CHECK_HEADERS([google/coredumper.h], AC_SUBST(GOOGLE_LIBS,-lcoredumper), AC_MSG_RESULT([[ Support for Google coredumper dissabled, you may want to download coredumper from goog-coredumper.sf.net ]]))

AC_ARG_WITH([coredumper],
 [AS_HELP_STRING(--with-coredumper,link against google coredumper (default YES))])

	if test "${with_coredumper}" != "no" ; then
		AC_CHECK_HEADERS([google/coredumper.h], [AC_CHECK_LIB(coredumper,WriteCoreDump, , AC_MSG_FAILURE([Google coredumper not found (buf I have found the header !?)]))], AC_MSG_RESULT([[ Support for Google coredumper dissabled, you may want to download coredumper from goog-coredumper.sf.net ]]))	
	fi

#dmalloc
AC_ARG_WITH([dmalloc],
 [AS_HELP_STRING(--with-dmalloc,link against dmalloc (default NO))])

	if test "${with_dmalloc}" == "yes" ; then
		AC_CHECK_HEADERS([dmalloc.h],
		 [AC_SEARCH_LIBS(dmalloc_verify,[dmallocxx dmalloccxx dmallocthcxx dmalloc dmallocth], , AC_MSG_FAILURE([Cannot find dmalloc]))], AC_MSG_FAILURE([[cannot find dmalloc ]]))
	fi


#types
#structures

#compiler specific
AC_C_BIGENDIAN
AC_C_CONST

#library funs
AC_PROG_GCC_TRADITIONAL
#system services


# vars
AC_ARG_VAR([ALC_DBG_LEVEL],
[Debug Level])


AC_SUBST(ALC_LIBS,[${ALC_LIBS}])

#out
AC_CONFIG_FILES([Makefile docs/Makefile include/Makefile \
 src/Makefile \
 src/alcbase/Makefile src/alcbase/test/Makefile \
 src/unet/Makefile src/servers/Makefile \
 src/client/Makefile src/tools/Makefile \
 src/test/Makefile])
AC_OUTPUT

