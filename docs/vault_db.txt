See the file src/servers/vaultdb.cpp, variable "vaultTableInitScript" for the SQL command to create the vault database.

This table will be useful for the conversion from the Nodes (plasma) to the Vault (H'uru) table.
(the structure might change in future)

VaultManager Name  ||  Plasma DB field Name  ||  Alcugs DB field Name (v0-2)  || Alcugs DB field Name (v3)
[Index]                 Idx                        idx                             idx
[Type]                  NodeType/NodeTypeStr       type                            type
[Permissions]           Permissions                permissions                     permissions
[Owner ID]              OwnerIdx                   owner                           owner
[Group ID]              GroupIdx                   unk1                            grp (group is a SQL keyword)
[Modify Time]           ModifyTime                 timestamp, microseconds         mod_time
[Creator ID]            CreatorIdx                 id1                             creator
[Create Time]           AutoTime                   timestamp2, microseconds2       crt_time (microseconds are always 0)
[Create Age Coords]     CreateAgeCoordsBlobIdx     **unused**                      **unused**
[Create Age Time]       CreateAgeTime              timestamp3, microseconds3       age_time (microseconds are always 0)
[Create Age Name]       CreateAgeName              age_name                        age_name
[Create Age Guid]       CreateAgeGuid              age_guid                        age_guid
[Int32_1]               Int32_1                    torans                          int_1
[Int32_2]               Int32_2                    distance                        int_2
[Int32_3]               Int32_3                    elevation                       int_3
[Int32_4]               Int32_4                    unk5                            int_4
[UInt32_1]              UInt32_1                   id2                             uint_1
[UInt32_2]              UInt32_2                   unk7                            uint_2
[UInt32_3]              UInt32_3                   unk8                            uint_3
[UInt32_4]              UInt32_4                   unk9                            uint_4
[String64_1]            String64_1                 entry_name                      str_1
[String64_2]            String64_2                 sub_entry_name                  str_2
[String64_3]            String64_3                 owner_name                      str_3
[String64_4]            String64_4                 guid                            str_4
[String64_5]            String64_5                 str1                            str_5
[String64_6]            String64_6                 str2                            str_6
[lString64_1]           lString64_1                avie                            lstr_1
[lString64_2]           lString64_2                uid                             lstr_2
[Text_1]                Text_1                     entry_value                     text_1
[Text_2]                Text_2                     entry2                          text_2
[Blob1 data]            **not stored in db**       data                            blob_1
[Blob2 data]            **not stored in db**       data2                           **unused**
[Blob1_guid]            Blob1Guid                  **unused**                      **unused**
[Blob2_guid]            Blob2Guid                  **unused**                      **unused**

CreateAgeCoordsBlobIdx was never seen in more than 1GB of logs
Blob1_guid and Blob2_guid must always be empty


* v0-2:
  -All timestamp, and microseconds fields must contain an integer value.
  -All timestamp fields contain Seconds since 1 January of 1970, all of them are mandatory!
* All microseconds fields can be zero without any problem.

* The H'uru server has Access levels for the user account, and for each player.

-> quick note about access levels
 0 -> FULL access. Gamemasters, admins, vault managers.
 1-2 -> *unused*
 3 -> Basic Admin access. GameMasters, write permissions
 4 -> *unused*
 5 -> Debug, read access level, status access level
 6 -> *unused*
 7 -> CCR level / Gamemasters
 8-9 -> *unused*
 10 -> Moderator/Counsuleur level (they can ban, silence..., etc...)
 11-14 -> *unused*
 15 -> Player Level
 16-24 -> *unused*
 25 -> Account Not Activated (Disabled)
 26-29 -> *unused*
 30 -> Banned

*IMPORTANT!* The access level of a player, is stored int the [UInt32_3]/(unk8) vault field! of 
a Player MGR Node (type 2). So, the default value in the Plasma Vault is '0' (Root access!), so it must be at least
15, that is the normal default player level.
Currently there aren't much checks in this value, since we can't trust it because any user can change this
field throught python. (But it will be used in the future, when the permissions code is finished and working)

* All the binary data, that is stored in the filesystem, in the H'uru server is stored in the database as
binary data. So all the blobs, need to be inserted into the adecuated data/blob1 field


The vault database used by the plasma servers has two tables where node references
are stored.
Both tables need to be merged into this table.

#This will create the table that stores all the node references.

CREATE TABLE `ref_vault` (
  `id1` int(11) NOT NULL default '0',
  `id2` int(11) NOT NULL default '0',
  `id3` int(11) NOT NULL default '0',
  `timestamp` int(11) NOT NULL default '0',
  `microseconds` int(11) NOT NULL default '0',
  `flag` tinyint(1) unsigned NOT NULL default '0',
  PRIMARY KEY  (`id2`,`id3`)
) TYPE=MyISAM;


*Where the conversion table is

Plasma DB field Name     ||   H'uru DB field Name
 SaverIdx // ClientIdx          id1
 ParentIdx                      id2
 ChildIdx                       id3
 AutoTime                       timestamp & microseconds
 Idx                            **unused**

And flag, is 1 if the reference is present in the NodeRefsSeen table, and 0 if not.

Theorically, there shouldn't be duplicate Parent/Child references, or at least
the H'uru vault don't allows them.

* About the vault unique id, it will be automatically generated by the server as soon as it notices
that is missing in the database.


Well, I don't know if all the required necessary information is here,
let me know any question(s) that you may have.

~Almlys
(updated by diafero for later alcugs database versions)