This fixes a bug in the unet2 servers which resulted in the wrong data for that "last acked packet" to be sent. It also avoids
Needless resends of a Nego packet.

diff -ur unet2_game_orig/protocol.cpp unet2_game/protocol.cpp
--- unet2_game_orig/protocol.cpp	2008-08-27 10:53:42.000000000 +0200
+++ unet2_game/protocol.cpp	2008-08-27 10:58:48.000000000 +0200
@@ -619,7 +619,7 @@
 		//(Negotation and Ack packets don't have checksum)
 	}
 
-	n=uru_put_header(buf,&u->server);
+	n=uru_get_header_start(&u->server); // don't call uru_put_header - that would update the "last msg with ack" with an invalid sn
 
 	//server bandwidth
 	*(U32 *)(buf+n)=global_bandwidth;
diff -ur unet2_game_orig/urunet.cpp unet2_game/urunet.cpp
--- unet2_game_orig/urunet.cpp	2008-08-27 10:53:53.000000000 +0200
+++ unet2_game/urunet.cpp	2008-08-27 11:04:30.000000000 +0200
@@ -1845,6 +1845,7 @@
 	u->old_p_n=0; //the agging packet counter protection
 	u->old_sn=0; //bis
 	n=uru_get_negotation_reply(buf,u);
+	u->negotiated=1;
 	return(plNetSend(sock,buf,n,u));
 }
 
